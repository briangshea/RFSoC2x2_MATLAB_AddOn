function hRD = plugin_rd(varargin)
% Reference design definition
% Copyright Brian G. Shea (bshea@eng.ucsd.edu)

p = inputParser;
p.addParameter('Board', 'RFSoC 2x2');
p.addParameter('Project', 'RFSoC_2x2');
p.addParameter('Variant', 'rx');

p.parse(varargin{:});
config = p.Results;

switch(lower(config.Board))
    case 'rfsoc 2x2'
        boardName='RFSoC 2x2';
        boardPath='rfsoc2x2';
        vivadoBoard='xilinx.com:rfsoc2x2:part0:1.1';
    otherwise
        error("Unsupported Board: '%s'", config.Board);
end

% Construct reference design object
hRD = hdlcoder.ReferenceDesign('SynthesisTool', 'Xilinx Vivado');

switch(lower(config.Variant))
    case 'rx'
        hRD.ReferenceDesignName = 'Receiver';
    otherwise
        error("Unsupported Board Variant: %s", config.Variant);
end

hRD.BoardName = boardName;

sharedFolder = fileparts(which('sdr.internal.hdlwa.vivado.ip.BGS.hdlcoder_base_iplist'));

% Shared Design Files
hRD.SharedRD = true;
hRD.SharedRDFolder = sharedFolder;

% Tool information
hRD.SupportedToolVersion = {'2020.2'};

% Add IP Repository
hRD.addIPRepository(...
    'IPListFunction',  'sdr.internal.hdlwa.vivado.ip.BGS.hdlcoder_base_iplist',...
    'NotExistMessage', 'IP repository not found');

%% Add custom design files
% add custom Vivado design
hRD.addCustomVivadoDesign( ...
    'CustomBlockDesignTcl', fullfile('board', boardPath, 'base_bd.tcl'), ...
    'CustomTopLevelHDL',    fullfile('board', boardPath, 'base_wrapper.v'), ...
    'VivadoBoardPart',      vivadoBoard);

hRD.CustomUpdateProjTcl = fullfile('common', 'system_cleanup.tcl');

hRD.BlockDesignName = 'base';

hRD.CustomConstraints = {fullfile('board', boardPath, 'base.xdc')};

sdr.internal.hdlwa.addFixedParameter(hRD, 'boardName',    lower(config.Board));
sdr.internal.hdlwa.addFixedParameter(hRD, 'project',      lower(config.Project));
sdr.internal.hdlwa.addFixedParameter(hRD, 'variant',      lower(config.Variant));
sdr.internal.hdlwa.addFixedParameter(hRD, 'sharedFolder', sharedFolder);


%% Add interfaces
% add clock interface
hRD.addClockInterface( ...
    'ClockConnection',     'rfdc/clk_adc0', ...
    'ResetConnection',     'adc0_sys_reset/peripheral_aresetn',...
    'DefaultFrequencyMHz', 256,...
    'MinFrequencyMHz',     256,...
    'MaxFrequencyMHz',     256 ...
    %{ 
    'ClockModuleInstance', 'clk_wiz_0',...
    'ClockNumber',         1 ...
    %}
    );  

% add AXI4 and AXI4-Lite slave interfaces
hRD.addAXI4SlaveInterface( ...
    'InterfaceConnection',      'axi_clk_conv_0/M_AXI', ...
    'BaseAddress',              '0x00B0000000', ...
    'MasterAddressSpace',       'zynq_ultra_ps_e_0/Data');


hRD.addAXI4StreamInterface(...
    'InterfaceID',              'ADC0 RE',...
    'MasterChannelConnection',  'adc0_clk_conv_re/S_AXIS', ...
    'SlaveChannelConnection' ,  'rfdc/m00_axis', ...
    'MasterChannelDataWidth',   128, ...
    'MasterChannelDataWidth',   128);

hRD.addAXI4StreamInterface(...
    'InterfaceID',              'ADC0 IM',...
    'MasterChannelConnection',  'adc0_clk_conv_im/S_AXIS', ...
    'SlaveChannelConnection' ,  'rfdc/m01_axis', ...
    'MasterChannelDataWidth',   128, ...
    'MasterChannelDataWidth',   128);

%{
hRD.addInternalIOInterface(...
    'InterfaceID',         'ADC0 RE In', ...
    'InterfaceType',       'IN', ...
    'PortName',            'ADC0 RE In', ...
    'InterfaceConnection', 'rfdc/m00_axis', ...
    'PortWidth',           128);

hRD.addInternalIOInterface(...
    'InterfaceID',         'ADC0 IM In', ...
    'InterfaceType',       'IN', ...
    'PortName',            'ADC0 IM In', ...
    'InterfaceConnection', 'rfdc/m01_axis', ...
    'PortWidth',           128);

hRD.addInternalIOInterface(...
    'InterfaceID',         'ADC0 RE Out', ...
    'InterfaceType',       'OUT', ...
    'PortName',            'ADC0 RE Out', ...
    'InterfaceConnection', 'adc0_clk_conv_re/S_AXIS', ...
    'PortWidth',           128);

hRD.addInternalIOInterface(...
    'InterfaceID',         'ADC0 IM Out', ...
    'InterfaceType',       'OUT', ...
    'PortName',            'ADC0 IM Out', ...
    'InterfaceConnection', 'adc0_clk_conv_im/S_AXIS', ...
    'PortWidth',           128);
%}
    
%{
hRD.addAXI4StreamInterface(...
    'InterfaceID', 'ADC0 RE In', ...
    'MasterChannelEnable',      true, ...
    'SlaveChannelEnable',       true, ...
    'MasterChannelConnection',  'rfdc/m00_axis', ...
    'SlaveChannelConnection' ,  'receiver/S_AXIS_ADC_00_RE', ...
    'MasterChannelDataWidth',   128, ...
    'MasterChannelDataWidth',   128, ...
    'HasProcessorConnection',   true);

hRD.addAXI4StreamInterface(...
    'InterfaceID', 'ADC0 IM In', ...
    'MasterChannelEnable',      true, ...
    'SlaveChannelEnable',       true, ...
    'MasterChannelConnection',  'rfdc/m01_axis', ...
    'SlaveChannelConnection' ,  'receiver/S_AXIS_ADC_00_IM', ...
    'MasterChannelDataWidth',   128, ...
    'MasterChannelDataWidth',   128, ...
    'HasProcessorConnection',   true);
%}    
hRD.DeviceTreeName = 'devicetree_axilite_iio.dtb';

% LocalWords:  Zynq ZC vlnv xilinx zynq zc AXI axi Addr wiz aresetn IPCORE
% LocalWords:  avnet devicetree axilite dtb Vivado
